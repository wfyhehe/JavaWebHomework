<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd


        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!-- 支持aop注解 -->
    <aop:aspectj-autoproxy/>

    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName"
                  value="com.mysql.cj.jdbc.Driver">
        </property>
        <property name="url" value="jdbc:mysql://localhost:3306/j2ee
        ?useUnicode=true&amp;serverTimezone=GMT%2b8&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="530091"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource">
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL57Dialect
                </prop>
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <!--<prop key="hibernate.format_sql">true</prop>-->
                <prop key="hibernate.event.merge.entity_copy_observer">allow</prop>
                <!--<pnname key="hibernate.hbm2ddl.auto">create</prop>-->
                <!--<pnname key="hibernate.current_session_context_class">thread</prop>-->
            </props>
        </property>
        <property name="packagesToScan" value="com.wfy.web.model"/>
    </bean>

    <bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <aop:config>
        <aop:pointcut
                expression="execution(public * com.wfy.web.service..*.*(..))"
                id="businessService"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="businessService"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--<tx:metsuppliername="find*" read-only="true"-->
            <!--propagation="NOT_SUPPORTED"/>-->
            <!-- get开头的方法不需要在事务中运行 。
            有些情况是没有必要使用事务的，比如获取数据。开启事务本身对性能是有一定的影响的-->

            <!-- 其他方法在实务中运行 -->
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="check*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="signIn" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
    </tx:advice>
</beans>